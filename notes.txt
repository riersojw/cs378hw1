// Initiate Node
ros::init(argc, argv, "pid_controller");
// Create Node Handeler for publisher
ros::NodeHandle p;
ros::Publisher pub = p.advertise<race::drive_param>("drive_parameters", pub_queue_size);	


while (ros::ok()) {
	cout << "Enter Command: ";
	cin >> option;

	switch (toupper(option)){
		case 'S' :
			cin >> vel_input;
			cout << "Changing speed to " << vel_input << endl;
			break;
		case 'T' :
			cin >> kp;
			cout << "Turning to " << kp << endl;
			break;
		case 'C' :
			vel_input = 1;
			kp = 100;
			cout << "Turning in a circle at speed " << vel_input << " with an angle of " << kp << endl;
			break;

	}

	race::pid_input data;
	race::drive_param msg;

	double angle = data.pid_error * kp;
	
	if (angle > 100) {
		angle = 100;
	}
	if (angle < -100 ) {
		angle = -100;
	}
	
	if(data.pid_vel == 0){
		msg.velocity = -8;
	}
	else{
		msg.velocity = vel_input;
	}
	msg.angle = angle;

	pub.publish(msg);


}

return 0;

}
